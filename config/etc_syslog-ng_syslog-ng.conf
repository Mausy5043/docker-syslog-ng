@version: 3.8
@include "scl.conf"

    options {
        create-dirs(yes);
        dir-group("syslog-usr");
        dir-owner("syslog-usr");
        dir-perm(0754);
        keep-hostname(yes);
        keep-timestamp(no);
        group("syslog-usr");
        owner("syslog-usr");
        perm(0654);
        stats_freq(86400);
        stats-level(2);
        time-reap(120);
    };

### SOURCES
    source s_local {
        system();
        internal();
    };

    source s_network {
        syslog(transport("tcp"));
        syslog(transport("udp"));
    };

### DESTINATIONS
    destination perhost_logs {
        file(
            "/srv/syslognet/syslog-ng/$YEAR/$MONTH/$DAY/${HOST}.txt"
             template("$ISODATE $FACILITY[$PRIORITY] $PROGRAM:: $MESSAGE\n")
        );
    };

    destination all_logs {
        file(
            "/srv/syslognet/syslog-ng/$YEAR/$MONTH/$DAY/all-logs.log"
            template("$ISODATE $HOST $FACILITY[$PRIORITY] $PROGRAM: $MESSAGE\n")
        );
    };

    destination dns_logs {
        file(
            "/srv/syslognet/syslog-ng/$YEAR/$MONTH/$DAY/dns.txt"
            template("$ISODATE $FACILITY[$PRIORITY] $PROGRAM: $MESSAGE\n")
        );
    };

### FILTERS
    filter f_dns {
       program("dnsmasq");
    };

    filter f_notdns {
       not program("dnsmasq");
    };

### LOG JOBS
    log {
         source(s_local);
         source(s_network);
         filter(f_notdns);
         destination(perhost_logs);
     };

# Uncomment this if you want one BIG file with everything in it.
#    log {
#         source(s_local);
#         source(s_network);
#         destination(all_logs);
#    };

    log {
        source(s_network);
        filter(f_dns);
        destination(dns_logs);
    };
